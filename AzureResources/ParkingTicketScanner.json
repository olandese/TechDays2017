{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "defaultValue": "ParkingTicketScanner"
    },
    "mailto": {
      "type": "string"
    },
    "checkFrequency": {
      "type": "string",
      "minLength": 1,
      "allowedValues": [
        "Month",
        "Week",
        "Day",
        "Hour",
        "Minute",
        "Second"
      ],
      "defaultValue": "Hour"
    },
    "checkInterval": {
      "type": "int",
      "defaultValue": 1
    },
    "repoUrl": {
      "type": "string",
      "defaultValue": "https://github.com/olandese/TechDays2017.git"
    },
    "branch": {
      "type": "string",
      "defaultValue": "master"
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    }
  },
  "variables": {
    "appNameUnique": "[concat(parameters('logicAppName'), uniquestring(resourceGroup().id))]",
    "functionName": "ParkingTicketCognitiveParser",
    "storageAccountName": "[concat('parktickscn', uniquestring(resourceGroup().id))]",
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
    "cognitiveservicesid": "[concat(resourceGroup().id,'/providers/','Microsoft.CognitiveServices/accounts/', parameters('logicAppName'))]",
    "Description": "TechDays 2017",
    "ACN": "4086",
    "CUR": "EUR",
    "dropboxConnection_Name": "dropbox",
    "dropboxConnection_DisplayName": "DropBox",
    "googlesheetConnection_Name": "googlesheet",
    "googlesheetConnection_DisplayName": "Google Sheet",
    "cognitiveservicescomputervisionConnection_Name": "cognitiveservicescomputervision",
    "cognitiveservicescomputervisionConnection_DisplayName": "Cognitive Services Computer Vision",
    "gmailConnection_Name": "gmail",
    "gmailConnection_DisplayName": "Gmail",
    "outlookConnection_Name": "outlook",
    "outlookConnection_DisplayName": "Outlook",
    "singleQuote": "'"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2015-04-01",
      "name": "[variables('appNameUnique')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('appNameUnique')]",
        "computeMode": "Dynamic",
        "sku": "Dynamic"
      }
    },
    {
      "apiVersion": "2015-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('appNameUnique')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appNameUnique'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appNameUnique'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('appNameUnique'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~1"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "6.5.0"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('appNameUnique'))]"
          ],
          "properties": {
            "RepoUrl": "[parameters('repoURL')]",
            "branch": "[parameters('branch')]",
            "IsManualIntegration": true
          }
        }
      ]
    },
    {
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Scope": {
              "type": "Scope",
              "actions": {
                "Optical_Character_Recognition_(OCR)_to_JSON": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['cognitiveservicescomputervision']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/vision/v1.0/ocr",
                    "queries": {
                      "language": "unk",
                      "detectOrientation": true,
                      "format": "Image Content"
                    },
                    "body": "@triggerBody()"
                  },
                  "runAfter": {}
                },
                "ParkingTicketCognitiveParser": {
                  "type": "Function",
                  "inputs": {
                    "body": "@body('Optical_Character_Recognition_(OCR)_to_JSON')",
                    "method": "POST",
                    "headers": {
                      "content-type": "application/json"
                    },
                    "function": {
                      "id": "[resourceId('Microsoft.Web/sites/functions', variables('appNameUnique'), variables('functionName'))]"
                    }
                  },
                  "runAfter": {
                    "Optical_Character_Recognition_(OCR)_to_JSON": [
                      "Succeeded"
                    ]
                  }
                }
              },
              "runAfter": {}
            },
            "Send_email": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['gmail']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/Mail",
                "body": {
                  "To": "[parameters('mailto')]",
                  "Subject": "Rabobank Ticket Parsing Error",
                  "Body": "@{body('ParkingTicketCognitiveParser')}",
                  "Attachments": [
                    {
                      "Name": "@triggerOutputs()['headers']['x-ms-file-name']",
                      "ContentBytes": "@{base64(triggerBody())}",
                      "ContentType": "@triggerOutputs()['headers']['Content-Type']"
                    }
                  ]
                }
              },
              "runAfter": {
                "Scope": [
                  "Failed"
                ]
              }
            },
            "Parse_JSON": {
              "type": "ParseJson",
              "inputs": {
                "content": "@body('ParkingTicketCognitiveParser')",
                "schema": {
                  "type": "object",
                  "properties": {
                    "Amount": {
                      "type": "string"
                    },
                    "Date": {
                      "type": "string"
                    }
                  }
                }
              },
              "runAfter": {
                "Scope": [
                  "Succeeded"
                ]
              }
            },
            "Send_approval_email": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['outlook']['connectionId']"
                  }
                },
                "path": "/approvalmail/$subscriptions",
                "body": {
                  "NotificationUrl": "@{listCallbackUrl()}",
                  "Message": {
                    "To": "[parameters('mailto')]",
                    "Subject": "Approval Request",
                    "Options": "Approve, Reject",
                    "Body": "A parking ticket has been scanned on @{body('Parse_JSON')?['Date']} with an amount of @{body('Parse_JSON')?['Amount']}â‚¬",
                    "Importance": "Normal",
                    "Attachments": [
                      {
                        "Name": "@triggerOutputs()['headers']['x-ms-file-name']",
                        "ContentBytes": "@{base64(triggerBody())}"
                      }
                    ]
                  }
                }
              },
              "runAfter": {
                "Parse_JSON": [
                  "Succeeded"
                ]
              }
            },
            "IsApproved": {
              "type": "If",
              "expression": "@equals(body('Send_approval_email')?['SelectedOption'], 'Approve')",
              "actions": {
                "Insert_row": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['googlesheet']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/datasets//tables//items",
                    "body": {
                      "Date": "@{body('ParkingTicketCognitiveParser').Date}",
                      "Description": "[variables('Description')]",
                      "ACN": "[variables('ACN')]",
                      "CUR": "[variables('CUR')]",
                      "Amount": "@{body('ParkingTicketCognitiveParser').Amount}"
                    }
                  },
                  "runAfter": {}
                }
              },
              "runAfter": {
                "Send_approval_email": [
                  "Succeeded"
                ]
              }
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_file_is_created": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['dropbox']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/datasets/default/triggers/onnewfile",
                "queries": {
                  "folderId": "",
                  "inferContentType": true
                }
              },
              "recurrence": {
                "frequency": "[parameters('checkFrequency')]",
                "interval": "[parameters('checkInterval')]"
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "outlook": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'outlook')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('outlookConnection_Name'))]",
                "connectionName": "[variables('outlookConnection_Name')]"
              },
              "googlesheet": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'googlesheet')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('googlesheetConnection_Name'))]",
                "connectionName": "[variables('googlesheetConnection_Name')]"
              },
              "gmail": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'gmail')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('gmailConnection_Name'))]",
                "connectionName": "[variables('gmailConnection_Name')]"
              },
              "cognitiveservicescomputervision": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'cognitiveservicescomputervision')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('cognitiveservicescomputervisionConnection_Name'))]",
                "connectionName": "[variables('cognitiveservicescomputervisionConnection_Name')]"
              },
              "dropbox": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'dropbox')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('dropboxConnection_Name'))]",
                "connectionName": "[variables('dropboxConnection_Name')]"
              }
            }
          }
        }
      },
      "name": "[parameters('logicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-06-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites/sourcecontrols', variables('appNameUnique'), 'web')]",
        "[resourceId('Microsoft.Web/connections', variables('outlookConnection_Name'))]",
        "[resourceId('Microsoft.Web/connections', variables('googlesheetConnection_Name'))]",
        "[resourceId('Microsoft.Web/connections', variables('gmailConnection_Name'))]",
        "[resourceId('Microsoft.Web/connections', variables('cognitiveservicescomputervisionConnection_Name'))]",
        "[resourceId('Microsoft.Web/connections', variables('dropboxConnection_Name'))]"
      ]
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('dropboxConnection_Name')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'dropbox')]"
        },
        "displayName": "[variables('dropboxConnection_DisplayName')]"
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('googlesheetConnection_Name')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'googlesheet')]"
        },
        "displayName": "[variables('googlesheetConnection_DisplayName')]"
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('gmailConnection_Name')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'gmail')]"
        },
        "displayName": "[variables('gmailConnection_DisplayName')]"
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "sku": {
        "name": "S1"
      },
      "kind": "ComputerVision",
      "name": "[parameters('logicAppName')]",
      "apiVersion": "2016-02-01-preview",
      "location": "[resourceGroup().location]",
      "scale": null,
      "properties": {},
      "dependsOn": []
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('cognitiveservicescomputervisionConnection_Name')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'cognitiveservicescomputervision')]"
        },
        "displayName": "[variables('cognitiveservicescomputervisionConnection_DisplayName')]",
        "parameterValues": {
          "siteUrl": "[reference(variables('cognitiveservicesid'), '2016-02-01-preview').endpoint]",
          "apiKey": "[listKeys(variables('cognitiveservicesid'),'2016-02-01-preview').key1]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('logicAppName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('outlookConnection_Name')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'outlook')]"
        },
        "displayName": "[variables('outlookConnection_DisplayName')]"
      }
    }
  ],
  "outputs": {}
}